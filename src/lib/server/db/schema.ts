import { pgTable, serial, text, integer, timestamp } from 'drizzle-orm/pg-core';

export const user = pgTable('user', {
	id: text('id').primaryKey(),
	age: integer('age'),
	username: text('username').notNull().unique(),
	passwordHash: text('password_hash').notNull()
});

export const session = pgTable('session', {
	id: text('id').primaryKey(),
	userId: text('user_id')
		.notNull()
		.references(() => user.id),
	expiresAt: timestamp('expires_at', { withTimezone: true, mode: 'date' }).notNull()
});

export const totpGroup = pgTable('totp_group', {
	id: text('id').primaryKey(),
	userId: text('user_id') //NOTE: group owner
		.notNull()
		.references(() => user.id),
	name: text('name').notNull()
});

export const totpSecret = pgTable('totp_secret', {
	id: text('id').primaryKey(),
	userId: text('user_id') //NOTE: secret owner
		.notNull()
		.references(() => user.id),
	totpGroupId: text('totp_group_id') //NOTE: a secret can only belong to one group, or no group at all
		.references(() => totpGroup.id),
	note: text('note'),
	username: text('username'),
	secret: text('secret').notNull(),
	publicUserKey: text('public_user_key') //NOTE: generated by owner in runtime
});

export type Session = typeof session.$inferSelect;

export type User = typeof user.$inferSelect;

export type TOTPGroup = typeof totpGroup.$inferSelect;

export type TOTPSecret = typeof totpSecret.$inferSelect;
